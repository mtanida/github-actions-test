name: Build and Release Python Package with uv

on:
  push:
    tags:
      - 'v*.*.*'  # Semantic version tags like v1.2.3 - 'v*.*.*-*'  # Semantic version pre-release tags like v1.2.3-beta.3, v1.2.3-dev.11, v1.2.3-alpha.4

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
    - run: |
        echo "repo        = ${{ github.repository }}"     # owner/repo
        echo "owner       = ${{ github.repository_owner }}"
        echo "ref_name    = ${{ github.ref_name }}"       # e.g. v1.2.3
        echo "ref_full    = ${{ github.ref }}"            # refs/tags/v1.2.3
        echo "ref_type    = ${{ github.ref_type }}"       # 'tag'
        echo "sha         = ${{ github.sha }}"            # commit the tag points to

    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Identify base branch
      run: |
        # find branch containing the tagged commit
        BRANCH=$(git branch -r --contains ${{ github.sha }} | grep -v '\->' | head -n1 | sed 's#origin/##')
        echo "branch=$BRANCH" >> $GITHUB_ENV

    - name: Switch to base branch
      run: git checkout ${{ env.branch }}

    - name: Extract version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF_NAME#v}" >> $GITHUB_ENV

    - name: Install uv
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH

    - name: Verify uv installation
      run: uv --version

    - name: Set version in pyproject.toml
      run: |
        cd pkgs/myproj
        uv verson ${{ env.VERSION }}

    - name: Build package
      run: |
        cd pkgs/myproj
        uv build

    - name: Create GitHub Release and upload artifacts
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        name: Release ${{ github.ref_name }}
        body: |
          Automated release for version ${{ github.ref_name }}.
        files: |
          pkgs/myproj/dist/*.whl
          pkgs/myproj/dist/*.tar.gz

    - uses: EndBug/add-and-commit@v9
      with:
        add: |
          pkgs/myproj/pyproject.toml
          pkgs/myproj/uv.lock
        default_author: user_info
        message: "ci: update pyproject.toml files"
